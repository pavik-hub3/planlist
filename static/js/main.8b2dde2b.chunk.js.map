{"version":3,"sources":["components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/brain.png","components/Logo/Logo.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","id","htmlFor","type","name","value","Register","Logo","options","max","height","width","paddingTop","alt","src","brain","TodoForm","props","useState","edit","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","Math","floor","random","text","placeholder","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","particlesOptions","particles","number","density","enable","value_area","App","onInputChange","event","onButtonSubmit","route","setState","state","this","params","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b2dde2b.chunk.js","sourcesContent":["import React from 'react';  \r\n \r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {      \r\n\t\tif(isSignedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t\t</nav> \r\n\t\t\t);\r\n\t\t} else {  \r\n\t\t\treturn ( \r\n\t\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p> \r\n\t\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t\t</nav>  \r\n\t\t\t);\r\n\t\t} \r\n} \r\n \r\nexport default Navigation;","import React from 'react'; \r\n\r\nconst Signin = ({ onRouteChange }) => { \r\n  return (   \r\n  \t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\"> \r\n\t    <main className=\"pa4 black-80\"> \r\n\t\t  <div className=\"measure\">\r\n\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t      <div className=\"mt3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t      </div>\r\n\t\t      <div className=\"mv3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t      </div>\r\n\t\t    </fieldset> \r\n\t\t    <div className=\"\">\r\n\t\t      <input \r\n\t\t          onClick={() => onRouteChange('home')}\r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t      type=\"submit\" \r\n\t\t\t      value=\"Sign in\"  \r\n\t\t\t    />\r\n\t\t    </div>\r\n\t\t    <div className=\"lh-copy mt3\">\r\n\t\t      <p  onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>    \r\n\t\t    </div>\r\n\t\t  </div>\r\n\t    </main> \r\n\t</article>   \r\n  );\r\n}\r\n\r\nexport default Signin;","import React from 'react'; \r\n\r\nconst Register = ({ onRouteChange }) => { \r\n  return (  \r\n  \t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\"> \r\n\t    <main className=\"pa4 black-80\"> \r\n\t\t  <div className=\"measure\">\r\n\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>  \r\n\t\t      <div className=\"mt3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t      </div>\r\n\t\t      <div className=\"mt3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t      </div>\r\n\t\t      <div className=\"mv3\">\r\n\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t      </div>\r\n\t\t    </fieldset>  \r\n\t\t    <div className=\"\">\r\n\t\t      <input \r\n\t\t          onClick={() => onRouteChange('home')}\r\n\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t      type=\"submit\" \r\n\t\t\t      value=\"Register\"    \r\n\t\t\t    />\r\n\t\t    </div> \r\n\t\t  </div>  \r\n\t    </main> \r\n\t</article> \r\n  );\r\n}\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/brain.e2074f99.png\";","import React from 'react'; \r\nimport Tilt from 'react-tilt'; \r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn ( \r\n\t\t<div className='ma4 mt0'> \r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n\t           <div className=\"Tilt-inner pa3\">\r\n\t              <img style={{paddingTop: '5px'}} alt='logo' src={brain}/> \r\n\t           </div>\r\n\t        </Tilt> \r\n\t\t</div>\r\n\t);\r\n} \r\n \r\nexport default Logo; \r\n","import React, { useState, useEffect, useRef } from 'react'; \r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }); \r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update your item'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='todo-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <> \r\n          <div className='center'>  \r\n          <div className='form center pa4 br3 shadow-5'>  \r\n          <input\r\n            placeholder='Add to do'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='todo-button'>\r\n            Add to list\r\n          </button>\r\n          </div>  \r\n          </div> \r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm; \r\n","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';  \r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });  \r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)} \r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div> \r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo; ","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm'; \r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) { \r\n      return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos];\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  };\r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <> \r\n      <div className='center'> \r\n          <div className='chose f3'> \r\n            {'Welcome to your do list....'} \r\n          </div> \r\n      </div> \r\n      <h1>List your Plan for Future?</h1> \r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        updateTodo={updateTodo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList; ","import React, { Component } from 'react';  \nimport Particles from 'react-particles-js'; \nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin'; \nimport Register from './components/Register/Register'; \nimport Logo from './components/Logo/Logo';\nimport TodoList from './components/TodoList'; \nimport './App.css';     \n  \nconst particlesOptions = { \n  particles: {\n    number: {\n      value: 70, \n      density: {\n        enable: true, \n        value_area: 800  \n      }\n    }\n  }\n} \n\nclass App extends Component { \n  constructor() {\n    super(); \n    this.state = {\n      input: '', \n      route: 'signin',  \n      isSignedIn: false,\n    } \n  } \n\n  onInputChange = (event) => { \n    console.log(event.target.value);   \n  }\n\n  onButtonSubmit = () => {\n    console.log('click');   \n  } \n   \n  onRouteChange = (route) => { \n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})   \n    }\n    this.setState({route: route});\n  }\n\n  render() {  \n    const { isSignedIn, route } = this.state; \n    return (\n      <div className=\"App\"> \n      <Particles className='particles'\n        params={particlesOptions}\n      />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} /> \n        { route === 'home' \n          ? <div> \n                <Logo /> \n                  <div className='todo-app'>\n                    <TodoList /> \n                  </div>\n            </div>\n          : (\n              route === 'signin' \n              ? <Signin onRouteChange={this.onRouteChange} /> \n              : <Register onRouteChange={this.onRouteChange} />  \n            ) \n        }\n      </div>\n    );\n  } \n}  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}